Timings for 100 mutexes locking each individual element of the array, so that threads can access any element as long as the particular element they want is not locked.
1000 threads. 100 array elements.



MATLAB Code to initialize array of timings:

timings = [1.218208 3.228162 7.232179 7.028239 1.427416 1.052436 3.229419 7.024518 1.421634 3.024291 7.028217 7.025902 1.504091 3.017490 3.026948 7.033217 3.025531 1.224362 7.028964 3.430600 3.025493 7.646078 3.230041 4.154538 1.217408 3.018928 3.026829 7.238101 3.016113 3.225256 1.213463 3.021662 4.148634 3.023652 3.228633 3.028197 3.225185 1.022688 7.028412 1.504276 7.029385 7.242780 1.027831 7.238070 3.021351 3.025060 3.222389 3.688617 7.027219 1.018451 7.031982 7.031507 1.505239 3.230332 1.213437 1.225350 3.218829 1.505056 7.710600 3.128644 3.229986 1.426723 7.027160 3.222701 3.015766 1.225002 7.031975 3.025812 7.029915 7.238314 1.504822 3.024763 3.223997 7.031550 7.028810 7.232733 7.034830 3.028326 3.226486 1.025127 3.023789 3.025770 3.026118 3.024178 1.504626 1.019364 7.034466 1.220414 3.429579 1.428104 1.020939 3.023919 7.033028 1.220919 7.033821 1.503385 3.023763 3.233286 1.024065 7.037665]



Code:


void *ServerEcho(void *args) {
    int clientFileDescriptor=(int)args;
    char str[STRMAX];

    read(clientFileDescriptor,str,STRMAX);

    char* pos = str;
    pos++;
    int index = atoi(pos);

    pthread_mutex_lock(&mutex_array[index]);
    if (str[0] == 'w') {
        sprintf(str, "String %d has been modified by a write request", index);
        sprintf(theArray[index], "%s", str);
        write(clientFileDescriptor,str,STRMAX);
    } else {
        write(clientFileDescriptor,theArray[index],STRMAX);        
    }
    pthread_mutex_unlock(&mutex_array[index]);
    
    read(clientFileDescriptor,str,STRMAX);

    close(clientFileDescriptor);
}




Data:

1.218208
3.228162
7.232179
7.028239
1.427416
1.052436
3.229419
7.024518
1.421634
3.024291
7.028217
7.025902
1.504091
3.017490
3.026948
7.033217
3.025531
1.224362
7.028964
3.430600
3.025493
7.646078
3.230041
4.154538
1.217408
3.018928
3.026829
7.238101
3.016113
3.225256
1.213463
3.021662
4.148634
3.023652
3.228633
3.028197
3.225185
1.022688
7.028412
1.504276
7.029385
7.242780
1.027831
7.238070
3.021351
3.025060
3.222389
3.688617
7.027219
1.018451
7.031982
7.031507
1.505239
3.230332
1.213437
1.225350
3.218829
1.505056
7.710600
3.128644
3.229986
1.426723
7.027160
3.222701
3.015766
1.225002
7.031975
3.025812
7.029915
7.238314
1.504822
3.024763
3.223997
7.031550
7.028810
7.232733
7.034830
3.028326
3.226486
1.025127
3.023789
3.025770
3.026118
3.024178
1.504626
1.019364
7.034466
1.220414
3.429579
1.428104
1.020939
3.023919
7.033028
1.220919
7.033821
1.503385
3.023763
3.233286
1.024065
7.037665